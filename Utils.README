Logger: Clase complementaria para log.

	- Configurar nivel de log a mostrar:
		LoggerManager.config().setShowLevel(Type.ALL);

	- Como usar:
		Logger log = LoggerManager.get();

		log.print(TAG_APP, TAG_CLASS, txt); // Por defecto el typo es INFO.
		log.print(Type, TAG_APP, TAG_CLASS, txt);

Images: Clase para el tratamiento de imagenes.
	- Como usar:
        ImagesManager.get().[Function];	

Network: Clase para comprobar el estado de la red.
	- Como usar:
		NetworkManager.get().haveNetworkConnection()

Timer: Clase que ejecutar un temporizador.
	- Como usar:
		new Timer().startTimer(3000, this);
		"this" corresponde al listener para cuando acabe el timer. Puede ser cualquier clase que implemente la interfaz
		OnFinishedTimer
	- Resultado
		Cuando el timer acaba se ejecuta el método timerFinished() en el listener

navigation: Control de la navegación entre fragments
 	// Pediente de indicar ejemplos.	
 	- IMPORTANTE
 	Si el fragment que se va a cargar es el último de una rama de navegación, es importante poner el atributo stack = false, ya que no será necesario incluirlo en la pila, y afectaría al flujo normal de la misma.

root.RootManager: Para comprobar si el dispositivo esta rooteado o no. (No es 100% efectivo)

AndroidVersion: Funciones de ayuda para comprobar la versión del sistema operativo sobre el que esta corriendo la aplicación.

Screen: Clase que comprueba las propiedades de la pantalla del dispositivo sobre el que esta corriendo la aplicación.

XSSSaniter: Clase para limpiar un string y no contenga sentencias javascrit. 
	- Como usar:
		XSSSaniter.stripXSS(txt);

Others: Diferentes utilidades: 
	Verificar un email.
	Verificar DNI/NIE.
	Generar aleatorios.
	Comprobar si hay tarjeta SIM.
	Obtener el ID del dispositivo.
	Generar un UUID. 		